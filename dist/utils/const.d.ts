export declare const m_constants: {
    RESPONSE_RESULT: {
        resCodeSucceed: number;
        resCodeError: number;
    };
    RESPONSE_ERROR: {
        resCodeUnknownError: number;
        resCodeNoToken: number;
        resCodeInvalidToken: number;
        resCodeTokenExpired: number;
        resCodeDatabaseError: number;
        resCodeNonSupportedType: number;
        resCodeInvalidData: number;
        resCodePendingUser: number;
        resCodeInactiveUser: number;
        resCodeInvalidPermisson: number;
        resCodeNotFound: number;
        resCodeMainBackendApiError: number;
        resCodeZoomApiError: number;
    };
    RESPONSE_API_ERROR: {
        resCodeInvalidID: number;
        resCodeInvalidEmail: number;
        resCodeInvalidAdvisor: number;
        resCodeInactiveAdvisor: number;
        resCodeNoValueToUpdate: number;
        resCodeUserNotFound: number;
        resCodeInvalidEmailSameAdvisor: number;
        resCodeLoginNoUserID: number;
        resCodeLoginNoPassword: number;
        resCodeLoginInvalidPassword: number;
        resCodeLoginInactive: number;
        resCodeSignUpNoUserID: number;
        resCodeSignUpNoPassword: number;
        resCodeInvalidEmailAlreadyTaken: number;
        resCodeInvalidUsernameAlreadyTaken: number;
        resCodeInvalidPasswordLength: number;
        resCodeInvalidEmailWithNexoroneAccount: number;
        resCodeResetPasswordNoOldPassword: number;
        resCodeResetPasswordNoNewPassword: number;
        resCodeResetPasswordInvalidOldPassword: number;
        resCodeResetPasswordUsedSamePassword: number;
        resCodeResetPasswordInvalidCode: number;
        resCodeResetPasswordInvalidPassword: number;
        resCodeUserListNoRoomID: number;
        resCodeUserListInvalidRoomID: number;
        resCodeMessageListNoRoomID: number;
        resCodeMessageListNoLastMessageID: number;
        resCodeInvalidMessageID: number;
        resCodeInvalidRoom: number;
        resCodeAlreadyConnected: number;
        resCodeInvalidScheduleTime: number;
        resCodeAlreadyScheduled: number;
        resCodeAdvisorNotReadyForSchedule: number;
        resCodeInvalidEventID: number;
        resCodeAlreadyScheduledWithOther: number;
        resCodeEmailSyncError: number;
        resCodeEmailSendError: number;
        resCodeEmailInvalidAttachment: number;
    };
    RESPONSE_SOCKET_ERROR: {
        resCodeInvalidSocket: number;
        resCodeSocketNoAdvisor: number;
        resCodeSocketLoginNoClientID: number;
        resCodeSocketLoginNoClientName: number;
        resCodeSocketLoginAPICallError: number;
        resCodeSocketLoginNoRoomID: number;
        resCodeSocketLoginCreateRoomFail: number;
        resCodeSocketLoginFindRoomFail: number;
        resCodeSocketLoginNoRoomsToJoin: number;
        resCodeSocketSendMessageNoRoomID: number;
        resCodeSocketSendMessageNoType: number;
        resCodeSocketSendMessageNoMessage: number;
        resCodeSocketSendMessageFail: number;
        resCodeSocketSaveMessageFail: number;
        resCodeSocketSendMessageInvalidUser: number;
        resCodeSocketSendMessageInvalidRoom: number;
        resCodeSocketOpenMessageNoMessageID: number;
        resCodeSocketDeleteMessageNoMessageID: number;
        resCodeSocketDeleteMessageNoRoomID: number;
        resCodeSocketTypingNoRoomID: number;
        resCodeSocketTypingNoType: number;
    };
    SOCKET_EVENTS: {
        SOCKET_ERROR: string;
        SOCKET_WARNING: string;
        SOCKET_LOGIN: string;
        SOCKET_LOGOUT: string;
        SOCKET_NEW_USER: string;
        SOCKET_SEND_MESSAGE: string;
        SOCKET_NEW_MESSAGE: string;
        SOCKET_SEND_TYPING: string;
        SOCKET_TYPING: string;
        SOCKET_OPEN_MESSAGE: string;
        SOCKET_UPDATE_MESSAGE: string;
        SOCKET_DELETE_MESSAGE: string;
        SOCKET_DISCONNECT: string;
        SOCKET_USER_LEFT: string;
    };
    API_URLS: {
        URL_API_SEND_SS_NOTIFICATION: string;
    };
    MESSAGE_TYPE: {
        MESSAGE_TYPE_TEXT: number;
        MESSAGE_TYPE_IMAGE: number;
        MESSAGE_TYPE_FILE: number;
    };
    ERROR_MESSAGES: {
        1000001: string;
        1000002: string;
        1000003: string;
        1000004: string;
        1000006: string;
        1000007: string;
        1000008: string;
        1000009: string;
        1000010: string;
        1000011: string;
        1000012: string;
        1000013: string;
        1000014: string;
        2000001: string;
        2000002: string;
        2000003: string;
        2000004: string;
        2000005: string;
        2000006: string;
        2000007: string;
        2001001: string;
        2001002: string;
        2001003: string;
        2001004: string;
        2002001: string;
        2002002: string;
        2002003: string;
        2002004: string;
        2002005: string;
        2002006: string;
        2003001: string;
        2003002: string;
        2003003: string;
        2003004: string;
        2003005: string;
        2003006: string;
        2004001: string;
        2004002: string;
        2005001: string;
        2005002: string;
        2005003: string;
        2005004: string;
        2006001: string;
        2007001: string;
        2007002: string;
        2007005: string;
        2007003: string;
        2007004: string;
        2008001: string;
        2008002: string;
        2008003: string;
        3000002: string;
    };
    MAILBOX: {
        inbox: string;
        junk: string;
        sent: string;
        draft: string;
        trash: string;
    };
};
